<?php

/**
 * WeUserWallet.php
 *
 * @author: wjp 2017-01-10
 */
class Model_WeUserWallet extends PhalApi_Model_NotORM
{
    /**
     * 根据主键值返回对应的表名，注意分表的情况
     */
    protected function getTableName($id)
    {
        return 'userWallet';
    }

    /**
     * 重写getORM方法，方便下面使用
     */
    protected function getORM($id = NULL)
    {
        return parent::getORM($id == NULL ? 'we_base' : $id);
    }


    public function __construct()
    {
    }

    /**
     * 获取某个
     * @desc wjp 2017-12-29
     * @return array
     * @throws PhalApi_Exception_InternalServerError
     */
    public function getById($data)
    {
        try {
            $sql = "select * from we_userWallet where id = {$data['id']}";
            $list = $this->getORM()->queryAll($sql);
            return isset($list[0])?$list[0]:null;
        } catch (Exception $ex) {
            DI()->logger->error('SQL_ERROR', ['trace' => __METHOD__, 'msg' => $ex->getMessage()]);
            throw new PhalApi_Exception_InternalServerError(T('Request failed'));
        }
    }

    /**
     * 获取某个
     * @desc wjp 2017-12-29
     * @return array
     * @throws PhalApi_Exception_InternalServerError
     */
    public function getByUserIdWalletId($data)
    {
        try {
            $sql = "select * from we_userWallet where walletId = {$data['walletId']} && userId = {$data['userId']}";
            $list = $this->getORM()->queryAll($sql);
            return isset($list[0])?$list[0]:null;
        } catch (Exception $ex) {
            DI()->logger->error('SQL_ERROR', ['trace' => __METHOD__, 'msg' => $ex->getMessage()]);
            throw new PhalApi_Exception_InternalServerError(T('Request failed'));
        }
    }

    /**
     * 获取列表
     * @desc wjp 2017-12-29
     * @return array
     * @throws PhalApi_Exception_InternalServerError
     */
    public function getList()
    {
        try {
            $sql = "select * from we_userWallet";
            $list = $this->getORM()->queryAll($sql);
            return $list;
        } catch (Exception $ex) {
            DI()->logger->error('SQL_ERROR', ['trace' => __METHOD__, 'msg' => $ex->getMessage()]);
            throw new PhalApi_Exception_InternalServerError(T('Request failed'));
        }
    }

    /**
     * 修改
     * @desc wjp 2018-02-10
     * @param $wallet
     * @param $allParams
     * @return array
     * @throws PhalApi_Exception_InternalServerError
     */
    public function updateInfo($wallet,$allParams)
    {
        try {

            DI()->notorm->beginTransaction('we_base');
            if($wallet['money']+$allParams['cMoney']<0)
                return null;

            $allParams['eMoney'] = $wallet['money']+$allParams['cMoney'];
            $allParams['sMoney'] = $wallet['money'];
            $sqlWallet = "update we_userWallet set money={$allParams['eMoney']} where userId = {$allParams['userId']} && walletId = {$allParams['walletId']}";
            DI()->notorm->transaction->queryAll($sqlWallet);
//            $update = DI()->notorm->transaction->queryAll($sqlWallet);

//            if($update == false){
//                throw new PhalApi_Exception_InternalServerError("数据操作错误",99);
//            }

            $sqlLog = "insert into we_moneyLog(`userId`,`useType`,`sMoney`,`cMoney`,`eMoney`,`walletId`,`note`) 
VALUE ({$allParams['userId']},{$allParams['useType']},{$allParams['sMoney']},{$allParams['cMoney']},{$allParams['eMoney']},{$allParams['walletId']},'{$allParams['note']})'";
            DI()->notorm->transaction->queryAll($sqlLog);
            DI()->notorm->commit('we_base');
            return isset($update)?$update:null;
        } catch (Exception $ex) {
            DI()->notorm->rollback('we_base');
            DI()->logger->error('SQL_ERROR', ['trace' => __METHOD__, 'msg' => $ex->getMessage()]);
            throw new PhalApi_Exception_InternalServerError(T('Request failed'));
        }
    }

    /**
     * 插入
     * @desc wjp 2017-01-18
     * @return array
     * @throws PhalApi_Exception_InternalServerError
     */
    public function insertInfo($data)
    {
        try {
            $ret = $this->getORM()->insert($data);
            $this -> addLog($this->getORM()->insert_id());
            return isset($ret)?$ret:null;
        } catch (Exception $ex) {
            DI()->logger->error('SQL_ERROR', ['trace' => __METHOD__, 'msg' => $ex->getMessage()]);
            throw new PhalApi_Exception_InternalServerError(T('Request failed'));
        }
    }

    /**
     * 删除
     * @desc wjp 2018-01-18
     * @param $data
     * @return array
     * @throws PhalApi_Exception_InternalServerError
     */
    public function deleteInfo($data)
    {
        try {
            $sql = "delete from we_userWallet where id = {$data['id']}";
            $msg = $this->getORM()->queryAll($sql);
            return $msg;
        } catch (Exception $ex) {
            DI()->logger->error('SQL_ERROR', ['trace' => __METHOD__, 'msg' => $ex->getMessage()]);
            throw new PhalApi_Exception_InternalServerError(T('Request failed'));
        }
    }
}