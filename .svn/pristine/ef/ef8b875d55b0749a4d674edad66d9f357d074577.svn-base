<?php

/**
 * 验证用户身份拦截
 * @author: wjp 2017-05-16
 *
 */
class PhalApi_Filter_SessionSign implements PhalApi_Filter
{
    public function check()
    {
        $allParams = DI()->request->getAll();
        if (!isset($allParams['service']))
            return null;
        $classAction = explode(".", $allParams['service']);
        $domainData = new Domain_UUserRole();
        //开放接口处理
        if (in_array($classAction['0'], ['WeOpen'])) {
            if (isset($allParams['accessToken']) && $allParams['accessToken'] != null && $allParams['accessToken'] != '') {
                $userId = $domainData->getUserId($allParams['accessToken'], 1);
                $userModel = new Model_WeUser();
                $loginUser = $userModel->getUserId($userId);
                if ($loginUser['status'] != 1)
                    throw new PhalApi_Exception_BadRequest(T('用户已冻结'), 10);

                DI()->user = $loginUser;
            }
            return null;
        }

        // 后台接口
        if (strstr($classAction[0], 'Back')) {
            $ipModel = new Model_UIp();
            $ipList = $ipModel ->getList();
            $ipArray = [];
            foreach ($ipList as $item) {
                $ipArray[] = $item['Ip'];
            }
            print_r($ipArray);exit;
            echo $this -> getClientIp(); exit;


            if (!isset($allParams['backToken']) || $allParams['backToken'] == null || $allParams['backToken'] == '')
                return null;
            $userId = $domainData->getUserId($allParams['backToken'], 2);
            $backUserModel = new Model_UUser();
            $hasUser = $backUserModel -> getUserInfoById($userId);
            if($hasUser == null)
                throw new PhalApi_Exception_BadRequest(T('用户已冻结'), 15);
            else
                DI() -> user = $hasUser;
            $role = $domainData->getRole($userId);
            if(isset($role['max']) && $role['max'] == true)
                return null;
            if(!in_array($allParams['service'], $role['permission']))
                throw new PhalApi_Exception_BadRequest(T('无权访问'), 20);
            return null;
        }

        // app接口的
        if (!isset($allParams['accessToken']) || $allParams['accessToken'] == null && $allParams['accessToken'] == '')
            throw new PhalApi_Exception_BadRequest(T('缺少 token'), 11);
        $userId = $domainData->getUserId($allParams['accessToken'], 1);
        $userModel = new Model_WeUser();
        $loginUser = $userModel->getUserId($userId);
        if ($loginUser['status'] != 1)
            throw new PhalApi_Exception_BadRequest(T('用户已冻结'), 10);

        if($classAction[1] == "InsertComment" && $loginUser['gag'] != null){
            $nowTime = time();
            $gagTime = strtotime($loginUser['gag']);
            if($gagTime > $nowTime)
                throw new PhalApi_Exception_BadRequest(T('您已被禁言 '.$loginUser['gag'].' 后解禁'), 25);
        }

        DI()->user = $loginUser;
    }

    private function getallheaders(){
        $headers = [];
        foreach($_SERVER as $name => $value){
            if (substr($name, 0, 5) == 'HTTP_') {
                $headers[str_replace(' ', '-', ucwords(strtolower(str_replace('_', ' ', substr($name, 5)))))] = $value;
            }
        }
        return $headers;
    }

    /**
     * 获取客户端IP地址
     * @return mixed
     */
    private function getClientIp() {
        static $realip = NULL;

        if($realip !== NULL){
            return $realip;
        }
        if(isset($_SERVER)){
            if(isset($_SERVER['HTTP_X_FORWARDED_FOR'])){ //但如果客户端是使用代理服务器来访问，那取到的就是代理服务器的 IP 地址，而不是真正的客户端 IP 地址。要想透过代理服务器取得客户端的真实 IP 地址，就要使用 $_SERVER["HTTP_X_FORWARDED_FOR"] 来读取。
                $arr = explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']);
                /* 取X-Forwarded-For中第一个非unknown的有效IP字符串 */
                foreach ($arr AS $ip){
                    $ip = trim($ip);
                    if ($ip != 'unknown'){
                        $realip = $ip;
                        break;
                    }
                }
            }elseif(isset($_SERVER['HTTP_CLIENT_IP'])){//HTTP_CLIENT_IP 是代理服务器发送的HTTP头。如果是"超级匿名代理"，则返回none值。同样，REMOTE_ADDR也会被替换为这个代理服务器的IP。
                $realip = $_SERVER['HTTP_CLIENT_IP'];
            }else{
                if (isset($_SERVER['REMOTE_ADDR'])){ //正在浏览当前页面用户的 IP 地址
                    $realip = $_SERVER['REMOTE_ADDR'];
                }else{
                    $realip = '0.0.0.0';
                }
            }
        }else{
            //getenv环境变量的值
            if (getenv('HTTP_X_FORWARDED_FOR')){//但如果客户端是使用代理服务器来访问，那取到的就是代理服务器的 IP 地址，而不是真正的客户端 IP 地址。要想透过代理服务器取得客户端的真实 IP 地址
                $realip = getenv('HTTP_X_FORWARDED_FOR');
            }elseif (getenv('HTTP_CLIENT_IP')){ //获取客户端IP
                $realip = getenv('HTTP_CLIENT_IP');
            }else{
                $realip = getenv('REMOTE_ADDR');  //正在浏览当前页面用户的 IP 地址
            }
        }
        preg_match("/[\d\.]{7,15}/", $realip, $onlineip);
        $realip = !empty($onlineip[0]) ? $onlineip[0] : '0.0.0.0';
        return $realip;
    }
}
